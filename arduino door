//4字节卡序列号，第5字节为校验字节
unsigned char serNum[5];
//写卡数据
//原扇区A密码，16个扇区，每个扇区密码6Byte
unsigned char sectorKeyA[16][16] = {
 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},};
//新扇区A密码，16个扇区，每个扇区密码6Byte
unsigned char sectorNewKeyA[16][16] = {
 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xff,0x07,0x80,0x69, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},
 {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xff,0x07,0x80,0x69, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF},};
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
#include <SPI.h>
#include <RFID.h>
LiquidCrystal_I2C mylcd(0x27,16,2);
String CARD[]={"2d0843462","2d0843462","2d0843462","2d0843462"};//此处为RFID卡读取的卡密，每张卡都是不一样的。需要更改
String RC;
volatile int item;
volatile int T;
volatile int C;
volatile int D;
Servo servo_5;
RFID rfid(10,5);
unsigned char i,tmp;
unsigned char status;
unsigned char str[MAX_LEN];
unsigned char RC_size;
unsigned char blockAddr;        //选择操作的块地址0～63
String RFID_readcardnum() {
 rfid.readCardSerial();
  String stringserNum=String(rfid.serNum[0], HEX)+String(rfid.serNum[1], HEX)+String(rfid.serNum[2], HEX)+String(rfid.serNum[3], HEX)+String(rfid.serNum[4], HEX);
      //选卡，返回卡容量（锁定卡片，防止多次读写）
      rfid.selectTag(rfid.serNum);
  return stringserNum;
}
void setup(){
  mylcd.init();
  mylcd.backlight();
  RC = "";
  item = 0;
  T = 100;
  C = 0;
  D = 0;
  servo_5.attach(5);
  mylcd.setCursor(0, 0);
  mylcd.print("close");
  mylcd.setCursor(0, 1);
  mylcd.print("");
  servo_5.write(90);
  delay(0);
  Serial.begin(9600);
  SPI.begin();
  rfid.init();
  pinMode(6, INPUT);
}
void loop(){
  if ( rfid.isCard()  ) {
    RC = RFID_readcardnum();
    Serial.println(RC);
    for (int i = (1); i <= (sizeof(CARD)/sizeof(CARD[0])); i = i + (1)) {
      if (RC == CARD[(int)(i - 1)]) {
        if (item == 0) {
          delay(200);
          item = 1;
        }
      } else {
        mylcd.setCursor(0, 0);
        mylcd.print("close");
        mylcd.setCursor(0, 1);
        mylcd.print("");
        servo_5.write(90);
        delay(0);
      }
    }
  }
  if (item == 1) {
    if (digitalRead(6) == LOW) {
      delay(T);
      C = C + T;
      D = C;
      Serial.println(D);
      if (D == 5000) {
        mylcd.setCursor(0, 0);
        mylcd.print("close");
        mylcd.setCursor(0, 1);
        mylcd.print("");
        servo_5.write(90);
        delay(0);
        C = 0;
        D = 0;
        item = 0;
      } else {
        mylcd.setCursor(0, 0);
        mylcd.print("open ");
        mylcd.setCursor(0, 1);
        mylcd.print("");
        servo_5.write(3);
        delay(0);
      }
    }
  }
}
